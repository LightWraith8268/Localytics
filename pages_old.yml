name: Deploy Localytics to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'index.html'
      - '404.html'
      - 'manifest.webmanifest'
      - 'service-worker.js'
      - 'assets/**'
      - '.github/workflows/pages.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build CSS with Tailwind CLI
        run: |
          npx --yes tailwindcss -c tailwind.config.js -i assets/css/tailwind.css -o assets/css/styles.css --minify

      - name: Inject Firebase config from secret (fallback to stub)
        env:
          FIREBASE_CONFIG_JSON: ${{ secrets.FIREBASE_CONFIG_JSON }}
        run: |
          mkdir -p assets/js
          if [ -n "$FIREBASE_CONFIG_JSON" ]; then
            echo "export const firebaseConfig = $FIREBASE_CONFIG_JSON; export default firebaseConfig;" > assets/js/firebase.js
            echo "firebase.js injected from secret"
          else
            echo "export const firebaseConfig = {}; export default firebaseConfig;" > assets/js/firebase.js
            echo "No FIREBASE_CONFIG_JSON provided; wrote stub config"
          fi

      - name: Verify versions
        run: |
          echo "APP_VERSION=$(sed -n "s/^const APP_VERSION = '\([0-9][0-9\.]*\)';/\1/p" assets/js/app.js)"
          echo "SW_VERSION=$(sed -n "s/^const VERSION = 'wb-\([0-9][0-9\.]*\)';/\1/p" service-worker.js)"
          grep -n "const VERSION" service-worker.js || true

      - name: Prepare dist directory
        run: |
          rm -rf dist
          mkdir -p dist
          cp -r index.html 404.html manifest.webmanifest service-worker.js dist/
          if [ -f .nojekyll ]; then cp .nojekyll dist/.nojekyll; fi
          cp -r assets dist/assets

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
