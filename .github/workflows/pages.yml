name: Deploy Localytics to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Using prebuilt assets/css/styles.css committed to the repo; no Tailwind build in CI

      - name: Validate Firebase secret
        env:
          FIREBASE_CONFIG_JSON: ${{ secrets.FIREBASE_CONFIG_JSON }}
        run: |
          if [ -z "$FIREBASE_CONFIG_JSON" ]; then
            echo "::error::FIREBASE_CONFIG_JSON secret is missing or empty" && exit 1
          fi

      - name: Inject Firebase config from secret
        env:
          FIREBASE_CONFIG_JSON: ${{ secrets.FIREBASE_CONFIG_JSON }}
        run: |
          mkdir -p assets/js
          node -e "const fs=require('fs'); const s=process.env.FIREBASE_CONFIG_JSON; let cfg=null; try{ cfg=JSON.parse(s);}catch(e){ try{ cfg=Function('return ('+s+')')(); }catch(e2){ console.error('Invalid FIREBASE_CONFIG_JSON. Must be valid JSON.'); process.exit(1);} } if(!cfg||typeof cfg!=='object'||!cfg.apiKey||!cfg.projectId||!cfg.appId){ console.error('FIREBASE_CONFIG_JSON missing required fields'); process.exit(1);} fs.writeFileSync('assets/js/firebase.js', 'export const firebaseConfig = '+JSON.stringify(cfg)+'; export default firebaseConfig;');"

      - name: Stamp Service Worker with build id (force update)
        run: |
          echo "/* build: ${GITHUB_SHA} $(date -u +'%Y-%m-%dT%H:%M:%SZ') */" >> service-worker.js

      - name: Verify versions
        continue-on-error: true
        run: |
          set -euxo pipefail
          echo "HEAD=$(git rev-parse --short HEAD)"
          echo "Files at root:" && ls -la || true
          APP_VERSION=$(sed -n "s/^const APP_VERSION = '\([0-9][0-9\.]*\)';/\1/p" assets/js/app.js || true)
          SW_VERSION=$(sed -n "s/^const VERSION = 'wb-\([0-9][0-9\.]*\)';/\1/p" service-worker.js || true)
          echo "Parsed versions: UI=$APP_VERSION SW=$SW_VERSION"
          if [ -z "$APP_VERSION" ] || [ -z "$SW_VERSION" ]; then echo "WARN: Could not parse versions; continuing"; else test "$APP_VERSION" = "$SW_VERSION"; fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Prepare dist directory
        run: |
          rm -rf dist
          mkdir -p dist
          cp -r index.html 404.html manifest.webmanifest service-worker.js assets dist/
          if [ -f .nojekyll ]; then cp .nojekyll dist/.nojekyll; fi
          echo "Dist contents:" && find dist -maxdepth 2 -type f -printf "%p\n" 2>/dev/null || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
